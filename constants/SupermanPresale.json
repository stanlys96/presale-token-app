{
  "address": "0x94d47B9D612455b432A8267b3aeC21A46eD451bd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "BuyToken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "EthToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GETH",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SPC",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountRaisedEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountRaisedUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyTokenEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokenUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inDollar",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inEth",
          "type": "uint256"
        }
      ],
      "name": "changeMinimumLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "changeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_total",
          "type": "uint256"
        }
      ],
      "name": "changeTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDT",
          "type": "address"
        }
      ],
      "name": "changeUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalanceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalanceUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divider",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractTokenApproval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPriceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProgress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_percent",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumDollar",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "preSaleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeedEth",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setPreSaleTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soldToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "stopPresale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPerUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFundsEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "usdtToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "Eth_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "busd_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usdt_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3be1d2599a58f09d40878679e14fafa7aaea749b624f60752bc4059d2146cd68",
  "receipt": {
    "to": null,
    "from": "0xf3f1A4EadA0D8a35d82421E303a139EBDC8E823f",
    "contractAddress": "0x94d47B9D612455b432A8267b3aeC21A46eD451bd",
    "transactionIndex": 80,
    "gasUsed": "2425285",
    "logsBloom": "0x
    "blockHash": "0x242e23decac6fa2034ccc6e6b6a6638155e99af2775b4a6df6b2b26ddedea80b",
    "transactionHash": "0x3be1d2599a58f09d40878679e14fafa7aaea749b624f60752bc4059d2146cd68",
    "logs": [],
    "blockNumber": 9330970,
    "cumulativeGasUsed": "12920877",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x4425D37b06DFaE953F19fc76815d88c8721478F6"],
  "numDeployments": 2,
  "solcInputHash": "676d83009f4d58586a1195471b15439c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EthToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GETH\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPC\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_inDollar\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inEth\",\"type\":\"uint256\"}],\"name\":\"changeMinimumLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"changeTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDT\",\"type\":\"address\"}],\"name\":\"changeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalanceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalanceUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractTokenApproval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPriceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumDollar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedEth\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setPreSaleTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFundsEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"usdtToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Eth_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"busd_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdt_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SupermanPresale.sol\":\"SupermanPresale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SupermanPresale.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2023-02-12\\n*/\\n\\npragma solidity ^0.8.15;\\n\\n//SPDX-License-Identifier: MIT Licensed\\n\\ninterface IToken {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external;\\n\\n    function transfer(address to, uint256 value) external;\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external;\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\\n// Token Pepe Inu\\ncontract SupermanPresale {\\n    using SafeMath for uint256;\\n\\n    IToken public SPC;\\n    IToken public USDT = IToken(0xdAC17F958D2ee523a2206206994597C13D831ec7);\\n    IToken public GETH = IToken(0xdD69DB25F6D620A7baD3023c5d32761D353D3De9);\\n    AggregatorV3Interface public priceFeedEth;\\n\\n    address payable public owner;\\n\\n    // 1 ETH = \\n    uint256 public tokenPerUsd = 4761904760000000000; //4.7 tokens for $1\\n    uint256 public preSaleStartTime;\\n    uint256 public soldToken;\\n    uint256 public totalSupply = 1500000 ether; //presale tokens \\n    uint256 public amountRaisedEth;\\n    uint256 public amountRaisedUSDT; \\n    uint256 public minimumDollar = 100000000; //min buy usdt\\n    uint256 public minimumETH = 0.05 ether; //min buy eth\\n    uint256 public constant divider = 100;\\n    \\n    bool public presaleStatus;\\n\\n    struct user {\\n        uint256 Eth_balance;\\n        uint256 busd_balance;\\n        uint256 usdt_balance;\\n        uint256 token_balance;\\n    }\\n\\n    mapping(address => user) public users;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"PRESALE: Not an owner\\\");\\n        _;\\n    }\\n\\n    event BuyToken(address indexed _user, uint256 indexed _amount);\\n\\n    constructor(address _spcAddress) {\\n        owner = payable(0xf3f1A4EadA0D8a35d82421E303a139EBDC8E823f);\\n        priceFeedEth = AggregatorV3Interface(\\n            0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        );\\n        preSaleStartTime = block.timestamp;\\n        presaleStatus = true;\\n        SPC = IToken(_spcAddress);\\n    }\\n\\n    receive() external payable {}\\n\\n    // to get real time price of Eth\\n    function getLatestPriceEth() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeedEth.latestRoundData();\\n        return uint256(price);\\n    }\\n\\n    // to buy token during preSale time with Eth => for web3 use\\n\\n    function buyTokenEth() public payable {\\n        require(presaleStatus == true, \\\"Presale : Presale is finished\\\");\\n        require(msg.value >= minimumETH, \\\"Presale : Unsuitable Amount\\\");\\n        require(soldToken <= totalSupply, \\\"All Sold\\\");\\n\\n        // GETH.transferFrom(msg.sender, address(this), msg.value);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = EthToToken(msg.value);\\n        SPC.transfer(msg.sender, numberOfTokens);\\n\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedEth = amountRaisedEth + (msg.value);\\n        users[msg.sender].Eth_balance =\\n            users[msg.sender].Eth_balance +\\n            (msg.value);\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to buy token during preSale time with USDT => for web3 use\\n    function buyTokenUSDT(uint256 amount) public {\\n        require(presaleStatus == true, \\\"Presale : Presale is finished\\\");\\n        require(amount >= minimumDollar,\\\"Minimum Amount is $100\\\"); \\n        require(soldToken <= totalSupply, \\\"All Sold\\\");\\n\\n        USDT.transferFrom(msg.sender, address(this), amount);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = usdtToToken(amount);\\n\\n        SPC.transfer(msg.sender, numberOfTokens);\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedUSDT = amountRaisedUSDT + (amount);\\n        users[msg.sender].usdt_balance =\\n            users[msg.sender].usdt_balance +\\n            (amount);\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to check percentage of token sold\\n    function getProgress() public view returns (uint256 _percent) {\\n        uint256 remaining = totalSupply -\\n            (soldToken / (10**(SPC.decimals())));\\n        remaining = (remaining * (divider)) / (totalSupply);\\n        uint256 hundred = 100;\\n        return hundred - (remaining);\\n    }\\n \\n    function stopPresale(bool state) external onlyOwner {\\n        presaleStatus = state;\\n    }\\n\\n    // to check number of token for given Eth\\n    function EthToToken(uint256 _amount) public view returns (uint256) {\\n        uint256 EthToUsd = (_amount * (getLatestPriceEth())) / (1 ether);\\n        uint256 numberOfTokens = (EthToUsd * (tokenPerUsd)) / (1e8);\\n        return numberOfTokens;\\n    }\\n\\n    // to check number of token for given usdt\\n    function usdtToToken(uint256 _amount) public view returns (uint256) {\\n        uint256 numberOfTokens = (_amount * (tokenPerUsd)) / (1e6);\\n        return numberOfTokens;\\n    }\\n\\n    // to change Price of the token\\n    function changePrice(uint256 _price) external onlyOwner {\\n        tokenPerUsd = _price;\\n    }\\n\\n    // to change preSale time duration\\n    function setPreSaleTime(uint256 _startTime) external onlyOwner {\\n        preSaleStartTime = _startTime;\\n    }\\n\\n    // transfer ownership\\n    function changeOwner(address payable _newOwner) external onlyOwner {\\n        owner = _newOwner;\\n    }\\n\\n    // change tokens\\n    function changeToken(address _token) external onlyOwner {\\n        SPC = IToken(_token);\\n    }\\n\\n       // change minimum buy\\n    function changeMinimumLimits(uint256 _inDollar, uint256 _inEth) external onlyOwner {\\n        minimumDollar = _inDollar;\\n        minimumETH    = _inEth;\\n    }\\n    // change supply\\n    function changeTotalSupply(uint256 _total) external onlyOwner {\\n        totalSupply = _total;\\n    }\\n    //change USDT\\n    function changeUSDT(address _USDT) external onlyOwner {\\n        USDT = IToken(_USDT);\\n    }\\n\\n    // to draw funds for liquidity\\n    function transferFundsEth(uint256 _value) external onlyOwner {\\n        owner.transfer(_value);\\n    }\\n\\n    // to draw out tokens\\n    function transferTokens(IToken token, uint256 _value) external onlyOwner {\\n        token.transfer(msg.sender, _value);\\n    }\\n\\n    // to get current UTC time\\n    function getCurrentTime() external view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    // to get contract Eth balance\\n    function contractBalanceEth() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    //to get contract USDT balance\\n    function contractBalanceUSDT() external view returns (uint256) {\\n        return USDT.balanceOf(address(this));\\n    }\\n\\n    // to get contract token balance\\n    function getContractTokenApproval() external view returns (uint256) {\\n        return SPC.allowance(owner, address(this));\\n    }\\n}\\n\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x4964e12c3ed9ec9d2d596a56871fdefb34087d71e396c31f382f4908c6ccfa1d\",\"license\":\"MIT Licensed\"}},\"version\":1}",
  "bytecode": "0x608060405273dac17f958d2ee523a2206206994597c13d831ec7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073dd69db25f6d620a7bad3023c5d32761d353d3de9600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550674215af264a0ab0006005556a013da329b63364718000006008556305f5e100600b5566b1a2bc2ec50000600c55348015620000e957600080fd5b506040516200293a3803806200293a83398181016040528101906200010f91906200028c565b73f3f1a4eada0d8a35d82421e303a139ebdc8e823f600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735f4ec3df9cbd43714fe2740f5e3616155c5b8419600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426006819055506001600d60006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002be565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002548262000227565b9050919050565b620002668162000247565b81146200027257600080fd5b50565b60008151905062000286816200025b565b92915050565b600060208284031215620002a557620002a462000222565b5b6000620002b58482850162000275565b91505092915050565b61266c80620002ce6000396000f3fe6080604052600436106102135760003560e01c806373279eb011610118578063a8d27b35116100a0578063bec3fa171161006f578063bec3fa171461074a578063c54e44eb14610773578063c618540a1461079e578063de031679146107c7578063f63bd635146107f05761021a565b8063a8d27b35146106a0578063acfb2355146106cb578063b285ad3c146106f6578063b5e75e1c146107215761021a565b8063a1e98a6d116100e7578063a1e98a6d146105b8578063a2b40d19146105e3578063a4d21e3b1461060c578063a6f9dae114610637578063a87430ba146106605761021a565b806373279eb01461052d5780638da5cb5b146105375780638e50c93114610562578063939c44561461058d5761021a565b806343fd1be21161019b57806352e973261161016a57806352e973261461045c578063639869a014610485578063651b5167146104ae57806366829b16146104d95780636769d1f9146105025761021a565b806343fd1be2146103a057806346906982146103cb5780634782e407146103f6578063486047dc1461041f5761021a565b806321c880ae116101e257806321c880ae146102c957806329cb924d146102f4578063378efa371461031f5780633b79fdd91461034a578063405fb944146103755761021a565b806306d65af31461021f5780630f0e4f731461024a57806318160ddd1461027357806319a304ef1461029e5761021a565b3661021a57005b600080fd5b34801561022b57600080fd5b5061023461082d565b6040516102419190611ac8565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190611b14565b610833565b005b34801561027f57600080fd5b506102886108cd565b6040516102959190611ac8565b60405180910390f35b3480156102aa57600080fd5b506102b36108d3565b6040516102c09190611bc0565b60405180910390f35b3480156102d557600080fd5b506102de6108f7565b6040516102eb9190611bfc565b60405180910390f35b34801561030057600080fd5b5061030961091d565b6040516103169190611ac8565b60405180910390f35b34801561032b57600080fd5b50610334610925565b6040516103419190611ac8565b60405180910390f35b34801561035657600080fd5b5061035f61092a565b60405161036c9190611ac8565b60405180910390f35b34801561038157600080fd5b5061038a6109cb565b6040516103979190611ac8565b60405180910390f35b3480156103ac57600080fd5b506103b56109d1565b6040516103c29190611ac8565b60405180910390f35b3480156103d757600080fd5b506103e0610a97565b6040516103ed9190611ac8565b60405180910390f35b34801561040257600080fd5b5061041d60048036038101906104189190611c55565b610a9d565b005b34801561042b57600080fd5b5061044660048036038101906104419190611b14565b610b71565b6040516104539190611ac8565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190611b14565b610b9b565b005b34801561049157600080fd5b506104ac60048036038101906104a79190611cba565b610c35565b005b3480156104ba57600080fd5b506104c3610ce2565b6040516104d09190611ac8565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611c55565b610cea565b005b34801561050e57600080fd5b50610517610dbd565b6040516105249190611ac8565b60405180910390f35b610535610dc3565b005b34801561054357600080fd5b5061054c611092565b6040516105599190611d08565b60405180910390f35b34801561056e57600080fd5b506105776110b8565b6040516105849190611ac8565b60405180910390f35b34801561059957600080fd5b506105a261115b565b6040516105af9190611ac8565b60405180910390f35b3480156105c457600080fd5b506105cd61124a565b6040516105da9190611ac8565b60405180910390f35b3480156105ef57600080fd5b5061060a60048036038101906106059190611b14565b611250565b005b34801561061857600080fd5b506106216112ea565b60405161062e9190611ac8565b60405180910390f35b34801561064357600080fd5b5061065e60048036038101906106599190611d4f565b6112f0565b005b34801561066c57600080fd5b5061068760048036038101906106829190611c55565b6113c4565b6040516106979493929190611d7c565b60405180910390f35b3480156106ac57600080fd5b506106b56113f4565b6040516106c29190611bc0565b60405180910390f35b3480156106d757600080fd5b506106e061141a565b6040516106ed9190611dd0565b60405180910390f35b34801561070257600080fd5b5061070b61142d565b6040516107189190611ac8565b60405180910390f35b34801561072d57600080fd5b5061074860048036038101906107439190611b14565b611433565b005b34801561075657600080fd5b50610771600480360381019061076c9190611e29565b611794565b005b34801561077f57600080fd5b50610788611895565b6040516107959190611bc0565b60405180910390f35b3480156107aa57600080fd5b506107c560048036038101906107c09190611e69565b6118bb565b005b3480156107d357600080fd5b506107ee60048036038101906107e99190611b14565b61195d565b005b3480156107fc57600080fd5b5061081760048036038101906108129190611b14565b611a59565b6040516108249190611ac8565b60405180910390f35b60065481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90611f06565b60405180910390fd5b8060068190555050565b60085481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b606481565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190611fb3565b5050509150508091505090565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401610a5192919061205e565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190612087565b905090565b60095481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2490611f06565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080620f424060055484610b8691906120e3565b610b90919061216c565b905080915050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290611f06565b60405180910390fd5b8060088190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611f06565b60405180910390fd5b80600d60006101000a81548160ff02191690831515021790555050565b600047905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7190611f06565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60075481565b60011515600d60009054906101000a900460ff16151514610e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e10906121e9565b60405180910390fd5b600c54341015610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590612255565b60405180910390fd5b6008546007541115610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c906122c1565b60405180910390fd5b6000610eb034611a59565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f0d9291906122e1565b600060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b5050505080600754610f4d919061230a565b60078190555034600954610f61919061230a565b60098190555034600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610fb5919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154611049919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111159190612360565b602060405180830381865afa158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111569190612087565b905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ed91906123b4565b600a6111f99190612514565b600754611206919061216c565b600854611213919061255f565b905060085460648261122591906120e3565b61122f919061216c565b90506000606490508181611243919061255f565b9250505090565b60055481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d790611f06565b60405180910390fd5b8060058190555050565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137790611f06565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900460ff1681565b600c5481565b60011515600d60009054906101000a900460ff16151514611489576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611480906121e9565b60405180910390fd5b600b548110156114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906125df565b60405180910390fd5b6008546007541115611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c906122c1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611574939291906125ff565b600060405180830381600087803b15801561158e57600080fd5b505af11580156115a2573d6000803e3d6000fd5b5050505060006115b182610b71565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161160e9291906122e1565b600060405180830381600087803b15801561162857600080fd5b505af115801561163c573d6000803e3d6000fd5b505050508060075461164e919061230a565b60078190555081600a54611662919061230a565b600a8190555081600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546116b6919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461174a919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181b90611f06565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161185f9291906122e1565b600060405180830381600087803b15801561187957600080fd5b505af115801561188d573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461194b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194290611f06565b60405180910390fd5b81600b8190555080600c819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e490611f06565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a55573d6000803e3d6000fd5b5050565b600080670de0b6b3a7640000611a6d61092a565b84611a7891906120e3565b611a82919061216c565b905060006305f5e10060055483611a9991906120e3565b611aa3919061216c565b90508092505050919050565b6000819050919050565b611ac281611aaf565b82525050565b6000602082019050611add6000830184611ab9565b92915050565b600080fd5b611af181611aaf565b8114611afc57600080fd5b50565b600081359050611b0e81611ae8565b92915050565b600060208284031215611b2a57611b29611ae3565b5b6000611b3884828501611aff565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b86611b81611b7c84611b41565b611b61565b611b41565b9050919050565b6000611b9882611b6b565b9050919050565b6000611baa82611b8d565b9050919050565b611bba81611b9f565b82525050565b6000602082019050611bd56000830184611bb1565b92915050565b6000611be682611b8d565b9050919050565b611bf681611bdb565b82525050565b6000602082019050611c116000830184611bed565b92915050565b6000611c2282611b41565b9050919050565b611c3281611c17565b8114611c3d57600080fd5b50565b600081359050611c4f81611c29565b92915050565b600060208284031215611c6b57611c6a611ae3565b5b6000611c7984828501611c40565b91505092915050565b60008115159050919050565b611c9781611c82565b8114611ca257600080fd5b50565b600081359050611cb481611c8e565b92915050565b600060208284031215611cd057611ccf611ae3565b5b6000611cde84828501611ca5565b91505092915050565b6000611cf282611b41565b9050919050565b611d0281611ce7565b82525050565b6000602082019050611d1d6000830184611cf9565b92915050565b611d2c81611ce7565b8114611d3757600080fd5b50565b600081359050611d4981611d23565b92915050565b600060208284031215611d6557611d64611ae3565b5b6000611d7384828501611d3a565b91505092915050565b6000608082019050611d916000830187611ab9565b611d9e6020830186611ab9565b611dab6040830185611ab9565b611db86060830184611ab9565b95945050505050565b611dca81611c82565b82525050565b6000602082019050611de56000830184611dc1565b92915050565b6000611df682611c17565b9050919050565b611e0681611deb565b8114611e1157600080fd5b50565b600081359050611e2381611dfd565b92915050565b60008060408385031215611e4057611e3f611ae3565b5b6000611e4e85828601611e14565b9250506020611e5f85828601611aff565b9150509250929050565b60008060408385031215611e8057611e7f611ae3565b5b6000611e8e85828601611aff565b9250506020611e9f85828601611aff565b9150509250929050565b600082825260208201905092915050565b7f50524553414c453a204e6f7420616e206f776e65720000000000000000000000600082015250565b6000611ef0601583611ea9565b9150611efb82611eba565b602082019050919050565b60006020820190508181036000830152611f1f81611ee3565b9050919050565b600069ffffffffffffffffffff82169050919050565b611f4581611f26565b8114611f5057600080fd5b50565b600081519050611f6281611f3c565b92915050565b6000819050919050565b611f7b81611f68565b8114611f8657600080fd5b50565b600081519050611f9881611f72565b92915050565b600081519050611fad81611ae8565b92915050565b600080600080600060a08688031215611fcf57611fce611ae3565b5b6000611fdd88828901611f53565b9550506020611fee88828901611f89565b9450506040611fff88828901611f9e565b935050606061201088828901611f9e565b925050608061202188828901611f53565b9150509295509295909350565b600061203982611b8d565b9050919050565b6120498161202e565b82525050565b61205881611c17565b82525050565b60006040820190506120736000830185612040565b612080602083018461204f565b9392505050565b60006020828403121561209d5761209c611ae3565b5b60006120ab84828501611f9e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120ee82611aaf565b91506120f983611aaf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612132576121316120b4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061217782611aaf565b915061218283611aaf565b9250826121925761219161213d565b5b828204905092915050565b7f50726573616c65203a2050726573616c652069732066696e6973686564000000600082015250565b60006121d3601d83611ea9565b91506121de8261219d565b602082019050919050565b60006020820190508181036000830152612202816121c6565b9050919050565b7f50726573616c65203a20556e7375697461626c6520416d6f756e740000000000600082015250565b600061223f601b83611ea9565b915061224a82612209565b602082019050919050565b6000602082019050818103600083015261226e81612232565b9050919050565b7f416c6c20536f6c64000000000000000000000000000000000000000000000000600082015250565b60006122ab600883611ea9565b91506122b682612275565b602082019050919050565b600060208201905081810360008301526122da8161229e565b9050919050565b60006040820190506122f6600083018561204f565b6123036020830184611ab9565b9392505050565b600061231582611aaf565b915061232083611aaf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612355576123546120b4565b5b828201905092915050565b6000602082019050612375600083018461204f565b92915050565b600060ff82169050919050565b6123918161237b565b811461239c57600080fd5b50565b6000815190506123ae81612388565b92915050565b6000602082840312156123ca576123c9611ae3565b5b60006123d88482850161239f565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561243857808604811115612414576124136120b4565b5b60018516156124235780820291505b8081029050612431856123e1565b94506123f8565b94509492505050565b600082612451576001905061250d565b8161245f576000905061250d565b8160018114612475576002811461247f576124ae565b600191505061250d565b60ff841115612491576124906120b4565b5b8360020a9150848211156124a8576124a76120b4565b5b5061250d565b5060208310610133831016604e8410600b84101617156124e35782820a9050838111156124de576124dd6120b4565b5b61250d565b6124f084848460016123ee565b92509050818404811115612507576125066120b4565b5b81810290505b9392505050565b600061251f82611aaf565b915061252a8361237b565b92506125577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612441565b905092915050565b600061256a82611aaf565b915061257583611aaf565b925082821015612588576125876120b4565b5b828203905092915050565b7f4d696e696d756d20416d6f756e74206973202431303000000000000000000000600082015250565b60006125c9601683611ea9565b91506125d482612593565b602082019050919050565b600060208201905081810360008301526125f8816125bc565b9050919050565b6000606082019050612614600083018661204f565b612621602083018561204f565b61262e6040830184611ab9565b94935050505056fea26469706673582212207fa88c5e4269ad4e8e332864779035a8b46243186091cb5bfc22c7c57d696f6464736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106102135760003560e01c806373279eb011610118578063a8d27b35116100a0578063bec3fa171161006f578063bec3fa171461074a578063c54e44eb14610773578063c618540a1461079e578063de031679146107c7578063f63bd635146107f05761021a565b8063a8d27b35146106a0578063acfb2355146106cb578063b285ad3c146106f6578063b5e75e1c146107215761021a565b8063a1e98a6d116100e7578063a1e98a6d146105b8578063a2b40d19146105e3578063a4d21e3b1461060c578063a6f9dae114610637578063a87430ba146106605761021a565b806373279eb01461052d5780638da5cb5b146105375780638e50c93114610562578063939c44561461058d5761021a565b806343fd1be21161019b57806352e973261161016a57806352e973261461045c578063639869a014610485578063651b5167146104ae57806366829b16146104d95780636769d1f9146105025761021a565b806343fd1be2146103a057806346906982146103cb5780634782e407146103f6578063486047dc1461041f5761021a565b806321c880ae116101e257806321c880ae146102c957806329cb924d146102f4578063378efa371461031f5780633b79fdd91461034a578063405fb944146103755761021a565b806306d65af31461021f5780630f0e4f731461024a57806318160ddd1461027357806319a304ef1461029e5761021a565b3661021a57005b600080fd5b34801561022b57600080fd5b5061023461082d565b6040516102419190611ac8565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190611b14565b610833565b005b34801561027f57600080fd5b506102886108cd565b6040516102959190611ac8565b60405180910390f35b3480156102aa57600080fd5b506102b36108d3565b6040516102c09190611bc0565b60405180910390f35b3480156102d557600080fd5b506102de6108f7565b6040516102eb9190611bfc565b60405180910390f35b34801561030057600080fd5b5061030961091d565b6040516103169190611ac8565b60405180910390f35b34801561032b57600080fd5b50610334610925565b6040516103419190611ac8565b60405180910390f35b34801561035657600080fd5b5061035f61092a565b60405161036c9190611ac8565b60405180910390f35b34801561038157600080fd5b5061038a6109cb565b6040516103979190611ac8565b60405180910390f35b3480156103ac57600080fd5b506103b56109d1565b6040516103c29190611ac8565b60405180910390f35b3480156103d757600080fd5b506103e0610a97565b6040516103ed9190611ac8565b60405180910390f35b34801561040257600080fd5b5061041d60048036038101906104189190611c55565b610a9d565b005b34801561042b57600080fd5b5061044660048036038101906104419190611b14565b610b71565b6040516104539190611ac8565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190611b14565b610b9b565b005b34801561049157600080fd5b506104ac60048036038101906104a79190611cba565b610c35565b005b3480156104ba57600080fd5b506104c3610ce2565b6040516104d09190611ac8565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611c55565b610cea565b005b34801561050e57600080fd5b50610517610dbd565b6040516105249190611ac8565b60405180910390f35b610535610dc3565b005b34801561054357600080fd5b5061054c611092565b6040516105599190611d08565b60405180910390f35b34801561056e57600080fd5b506105776110b8565b6040516105849190611ac8565b60405180910390f35b34801561059957600080fd5b506105a261115b565b6040516105af9190611ac8565b60405180910390f35b3480156105c457600080fd5b506105cd61124a565b6040516105da9190611ac8565b60405180910390f35b3480156105ef57600080fd5b5061060a60048036038101906106059190611b14565b611250565b005b34801561061857600080fd5b506106216112ea565b60405161062e9190611ac8565b60405180910390f35b34801561064357600080fd5b5061065e60048036038101906106599190611d4f565b6112f0565b005b34801561066c57600080fd5b5061068760048036038101906106829190611c55565b6113c4565b6040516106979493929190611d7c565b60405180910390f35b3480156106ac57600080fd5b506106b56113f4565b6040516106c29190611bc0565b60405180910390f35b3480156106d757600080fd5b506106e061141a565b6040516106ed9190611dd0565b60405180910390f35b34801561070257600080fd5b5061070b61142d565b6040516107189190611ac8565b60405180910390f35b34801561072d57600080fd5b5061074860048036038101906107439190611b14565b611433565b005b34801561075657600080fd5b50610771600480360381019061076c9190611e29565b611794565b005b34801561077f57600080fd5b50610788611895565b6040516107959190611bc0565b60405180910390f35b3480156107aa57600080fd5b506107c560048036038101906107c09190611e69565b6118bb565b005b3480156107d357600080fd5b506107ee60048036038101906107e99190611b14565b61195d565b005b3480156107fc57600080fd5b5061081760048036038101906108129190611b14565b611a59565b6040516108249190611ac8565b60405180910390f35b60065481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90611f06565b60405180910390fd5b8060068190555050565b60085481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b606481565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190611fb3565b5050509150508091505090565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401610a5192919061205e565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190612087565b905090565b60095481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2490611f06565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080620f424060055484610b8691906120e3565b610b90919061216c565b905080915050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290611f06565b60405180910390fd5b8060088190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611f06565b60405180910390fd5b80600d60006101000a81548160ff02191690831515021790555050565b600047905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7190611f06565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60075481565b60011515600d60009054906101000a900460ff16151514610e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e10906121e9565b60405180910390fd5b600c54341015610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590612255565b60405180910390fd5b6008546007541115610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c906122c1565b60405180910390fd5b6000610eb034611a59565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f0d9291906122e1565b600060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b5050505080600754610f4d919061230a565b60078190555034600954610f61919061230a565b60098190555034600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610fb5919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154611049919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111159190612360565b602060405180830381865afa158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111569190612087565b905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ed91906123b4565b600a6111f99190612514565b600754611206919061216c565b600854611213919061255f565b905060085460648261122591906120e3565b61122f919061216c565b90506000606490508181611243919061255f565b9250505090565b60055481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d790611f06565b60405180910390fd5b8060058190555050565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137790611f06565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900460ff1681565b600c5481565b60011515600d60009054906101000a900460ff16151514611489576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611480906121e9565b60405180910390fd5b600b548110156114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906125df565b60405180910390fd5b6008546007541115611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c906122c1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611574939291906125ff565b600060405180830381600087803b15801561158e57600080fd5b505af11580156115a2573d6000803e3d6000fd5b5050505060006115b182610b71565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161160e9291906122e1565b600060405180830381600087803b15801561162857600080fd5b505af115801561163c573d6000803e3d6000fd5b505050508060075461164e919061230a565b60078190555081600a54611662919061230a565b600a8190555081600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546116b6919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461174a919061230a565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181b90611f06565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161185f9291906122e1565b600060405180830381600087803b15801561187957600080fd5b505af115801561188d573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461194b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194290611f06565b60405180910390fd5b81600b8190555080600c819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e490611f06565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a55573d6000803e3d6000fd5b5050565b600080670de0b6b3a7640000611a6d61092a565b84611a7891906120e3565b611a82919061216c565b905060006305f5e10060055483611a9991906120e3565b611aa3919061216c565b90508092505050919050565b6000819050919050565b611ac281611aaf565b82525050565b6000602082019050611add6000830184611ab9565b92915050565b600080fd5b611af181611aaf565b8114611afc57600080fd5b50565b600081359050611b0e81611ae8565b92915050565b600060208284031215611b2a57611b29611ae3565b5b6000611b3884828501611aff565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b86611b81611b7c84611b41565b611b61565b611b41565b9050919050565b6000611b9882611b6b565b9050919050565b6000611baa82611b8d565b9050919050565b611bba81611b9f565b82525050565b6000602082019050611bd56000830184611bb1565b92915050565b6000611be682611b8d565b9050919050565b611bf681611bdb565b82525050565b6000602082019050611c116000830184611bed565b92915050565b6000611c2282611b41565b9050919050565b611c3281611c17565b8114611c3d57600080fd5b50565b600081359050611c4f81611c29565b92915050565b600060208284031215611c6b57611c6a611ae3565b5b6000611c7984828501611c40565b91505092915050565b60008115159050919050565b611c9781611c82565b8114611ca257600080fd5b50565b600081359050611cb481611c8e565b92915050565b600060208284031215611cd057611ccf611ae3565b5b6000611cde84828501611ca5565b91505092915050565b6000611cf282611b41565b9050919050565b611d0281611ce7565b82525050565b6000602082019050611d1d6000830184611cf9565b92915050565b611d2c81611ce7565b8114611d3757600080fd5b50565b600081359050611d4981611d23565b92915050565b600060208284031215611d6557611d64611ae3565b5b6000611d7384828501611d3a565b91505092915050565b6000608082019050611d916000830187611ab9565b611d9e6020830186611ab9565b611dab6040830185611ab9565b611db86060830184611ab9565b95945050505050565b611dca81611c82565b82525050565b6000602082019050611de56000830184611dc1565b92915050565b6000611df682611c17565b9050919050565b611e0681611deb565b8114611e1157600080fd5b50565b600081359050611e2381611dfd565b92915050565b60008060408385031215611e4057611e3f611ae3565b5b6000611e4e85828601611e14565b9250506020611e5f85828601611aff565b9150509250929050565b60008060408385031215611e8057611e7f611ae3565b5b6000611e8e85828601611aff565b9250506020611e9f85828601611aff565b9150509250929050565b600082825260208201905092915050565b7f50524553414c453a204e6f7420616e206f776e65720000000000000000000000600082015250565b6000611ef0601583611ea9565b9150611efb82611eba565b602082019050919050565b60006020820190508181036000830152611f1f81611ee3565b9050919050565b600069ffffffffffffffffffff82169050919050565b611f4581611f26565b8114611f5057600080fd5b50565b600081519050611f6281611f3c565b92915050565b6000819050919050565b611f7b81611f68565b8114611f8657600080fd5b50565b600081519050611f9881611f72565b92915050565b600081519050611fad81611ae8565b92915050565b600080600080600060a08688031215611fcf57611fce611ae3565b5b6000611fdd88828901611f53565b9550506020611fee88828901611f89565b9450506040611fff88828901611f9e565b935050606061201088828901611f9e565b925050608061202188828901611f53565b9150509295509295909350565b600061203982611b8d565b9050919050565b6120498161202e565b82525050565b61205881611c17565b82525050565b60006040820190506120736000830185612040565b612080602083018461204f565b9392505050565b60006020828403121561209d5761209c611ae3565b5b60006120ab84828501611f9e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120ee82611aaf565b91506120f983611aaf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612132576121316120b4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061217782611aaf565b915061218283611aaf565b9250826121925761219161213d565b5b828204905092915050565b7f50726573616c65203a2050726573616c652069732066696e6973686564000000600082015250565b60006121d3601d83611ea9565b91506121de8261219d565b602082019050919050565b60006020820190508181036000830152612202816121c6565b9050919050565b7f50726573616c65203a20556e7375697461626c6520416d6f756e740000000000600082015250565b600061223f601b83611ea9565b915061224a82612209565b602082019050919050565b6000602082019050818103600083015261226e81612232565b9050919050565b7f416c6c20536f6c64000000000000000000000000000000000000000000000000600082015250565b60006122ab600883611ea9565b91506122b682612275565b602082019050919050565b600060208201905081810360008301526122da8161229e565b9050919050565b60006040820190506122f6600083018561204f565b6123036020830184611ab9565b9392505050565b600061231582611aaf565b915061232083611aaf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612355576123546120b4565b5b828201905092915050565b6000602082019050612375600083018461204f565b92915050565b600060ff82169050919050565b6123918161237b565b811461239c57600080fd5b50565b6000815190506123ae81612388565b92915050565b6000602082840312156123ca576123c9611ae3565b5b60006123d88482850161239f565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561243857808604811115612414576124136120b4565b5b60018516156124235780820291505b8081029050612431856123e1565b94506123f8565b94509492505050565b600082612451576001905061250d565b8161245f576000905061250d565b8160018114612475576002811461247f576124ae565b600191505061250d565b60ff841115612491576124906120b4565b5b8360020a9150848211156124a8576124a76120b4565b5b5061250d565b5060208310610133831016604e8410600b84101617156124e35782820a9050838111156124de576124dd6120b4565b5b61250d565b6124f084848460016123ee565b92509050818404811115612507576125066120b4565b5b81810290505b9392505050565b600061251f82611aaf565b915061252a8361237b565b92506125577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612441565b905092915050565b600061256a82611aaf565b915061257583611aaf565b925082821015612588576125876120b4565b5b828203905092915050565b7f4d696e696d756d20416d6f756e74206973202431303000000000000000000000600082015250565b60006125c9601683611ea9565b91506125d482612593565b602082019050919050565b600060208201905081810360008301526125f8816125bc565b9050919050565b6000606082019050612614600083018661204f565b612621602083018561204f565b61262e6040830184611ab9565b94935050505056fea26469706673582212207fa88c5e4269ad4e8e332864779035a8b46243186091cb5bfc22c7c57d696f6464736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 127,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "SPC",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IToken)77"
      },
      {
        "astId": 133,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "USDT",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IToken)77"
      },
      {
        "astId": 139,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "GETH",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IToken)77"
      },
      {
        "astId": 142,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "priceFeedEth",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)121"
      },
      {
        "astId": 144,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address_payable"
      },
      {
        "astId": 147,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "tokenPerUsd",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 149,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "preSaleStartTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 151,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "soldToken",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 154,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "totalSupply",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 156,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "amountRaisedEth",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 158,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "amountRaisedUSDT",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 161,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "minimumDollar",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 164,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "minimumETH",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "presaleStatus",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 183,
        "contract": "contracts/SupermanPresale.sol:SupermanPresale",
        "label": "users",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_struct(user)178_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)121": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IToken)77": {
        "encoding": "inplace",
        "label": "contract IToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(user)178_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SupermanPresale.user)",
        "numberOfBytes": "32",
        "value": "t_struct(user)178_storage"
      },
      "t_struct(user)178_storage": {
        "encoding": "inplace",
        "label": "struct SupermanPresale.user",
        "members": [
          {
            "astId": 171,
            "contract": "contracts/SupermanPresale.sol:SupermanPresale",
            "label": "Eth_balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 173,
            "contract": "contracts/SupermanPresale.sol:SupermanPresale",
            "label": "busd_balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 175,
            "contract": "contracts/SupermanPresale.sol:SupermanPresale",
            "label": "usdt_balance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 177,
            "contract": "contracts/SupermanPresale.sol:SupermanPresale",
            "label": "token_balance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
